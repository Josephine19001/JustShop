{"ast":null,"code":"import _slicedToArray from\"/Users/Josephine/Documents/Integrify-full-stack/full-stack-4-typescript-men-boilerplate/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{Card,CardContent,TextField,Typography,Divider,Button,Grid}from\"@material-ui/core\";import useStyles from\"./style\";import{changePassword}from\"../../redux/actions/auth\";import{alertFailure}from\"../../redux/actions/alert\";var ChangePassword=function ChangePassword(){var _useSelector=useSelector(function(state){return state.authentication;}),loading=_useSelector.loading,currentUser=_useSelector.currentUser;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),oldPassword=_useState2[0],setOldPassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newPassword=_useState4[0],setNewPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setConfirmPassword=_useState6[1];var _useState7=useState(currentUser.email),_useState8=_slicedToArray(_useState7,2),email=_useState8[0],setEmail=_useState8[1];var classes=useStyles();var dispatch=useDispatch();// useEffect(() => {\n//   dispatch(getUserByEmail(email));\n// }, [dispatch]);\nvar handleOldPasswordChange=function handleOldPasswordChange(event){setOldPassword(event.currentTarget.value);};var handleEmailChange=function handleEmailChange(event){setEmail(event.currentTarget.value);};var handleNewPasswordChange=function handleNewPasswordChange(event){setNewPassword(event.currentTarget.value);};var handleConfirmPasswordChange=function handleConfirmPasswordChange(event){setConfirmPassword(event.currentTarget.value);};function handleChangeClick(event){event.preventDefault();if(newPassword!==confirmPassword){dispatch(alertFailure(\"Passwords do not match\"));}else{dispatch(changePassword(email,oldPassword,newPassword));}window.location.reload(false);}return/*#__PURE__*/React.createElement(Grid,{className:classes.container,container:true,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:10,lg:6},/*#__PURE__*/React.createElement(\"h2\",null,\"Change Password\"),/*#__PURE__*/React.createElement(Card,{elevation:4,raised:true,variant:\"elevation\"},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(Typography,{variant:\"overline\"},\"Email\"),/*#__PURE__*/React.createElement(TextField,{placeholder:\"Email\",name:\"email\",fullWidth:true,onChange:handleEmailChange,value:email,required:true,margin:\"dense\",helperText:\"This field is required\",variant:\"outlined\",type:\"email\",label:\"email\",color:\"primary\"// error={error.name}\n}),/*#__PURE__*/React.createElement(Divider,{variant:\"fullWidth\"}),/*#__PURE__*/React.createElement(TextField,{placeholder:\"Old password\",name:\"old-password\",fullWidth:true,onChange:handleOldPasswordChange,value:oldPassword,required:true,margin:\"dense\",helperText:\"This field is required\",variant:\"outlined\",type:\"password\",label:\"Old password\",color:\"primary\"// error={error.name}\n}),/*#__PURE__*/React.createElement(Divider,{variant:\"fullWidth\"}),/*#__PURE__*/React.createElement(Typography,{variant:\"overline\"},\"New password\"),/*#__PURE__*/React.createElement(TextField,{placeholder:\"New password\",name:\"new-password\",onChange:handleNewPasswordChange,fullWidth:true,value:newPassword,required:true,margin:\"dense\",helperText:\"This field is required\",variant:\"outlined\",type:\"password\",label:\"New password\",color:\"primary\"// error={error.profession}\n}),/*#__PURE__*/React.createElement(Divider,{variant:\"fullWidth\"}),/*#__PURE__*/React.createElement(Typography,{variant:\"overline\"},\"Confirm password\"),/*#__PURE__*/React.createElement(TextField,{placeholder:\"Comfirm password\",name:\"comfirm-password\",onChange:handleConfirmPasswordChange,fullWidth:true,value:confirmPassword,required:true,margin:\"dense\",helperText:\"This field is required\",variant:\"outlined\",type:\"password\",label:\"Confirm password\",color:\"primary\"// error={error.profession}\n}),/*#__PURE__*/React.createElement(Button,{className:classes.buttonColor,variant:\"contained\",disabled:loading,fullWidth:true,onClick:handleChangeClick},\"Save Changes\"))))));};export default ChangePassword;","map":{"version":3,"sources":["/Users/Josephine/Documents/Integrify-full-stack/full-stack-4-typescript-men-boilerplate/frontend/src/components/ChangePassword/ChangePassword.tsx"],"names":["React","useState","useSelector","useDispatch","Card","CardContent","TextField","Typography","Divider","Button","Grid","useStyles","changePassword","alertFailure","ChangePassword","state","authentication","loading","currentUser","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","email","setEmail","classes","dispatch","handleOldPasswordChange","event","currentTarget","value","handleEmailChange","handleNewPasswordChange","handleConfirmPasswordChange","handleChangeClick","preventDefault","window","location","reload","container","buttonColor"],"mappings":"mLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAA+C,OAA/C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,IADF,CAEEC,WAFF,CAGEC,SAHF,CAIEC,UAJF,CAKEC,OALF,CAMEC,MANF,CAOEC,IAPF,KAUO,mBAVP,CAYA,MAAOC,CAAAA,SAAP,KAAsB,SAAtB,CAEA,OAASC,cAAT,KAA+B,0BAA/B,CACA,OAASC,YAAT,KAA2C,2BAA3C,CAGA,GAAMC,CAAAA,cAAkB,CAAG,QAArBA,CAAAA,cAAqB,EAAM,kBACEZ,WAAW,CAC1C,SAACa,KAAD,QAAqBA,CAAAA,KAAK,CAACC,cAA3B,EAD0C,CADb,CACvBC,OADuB,cACvBA,OADuB,CACdC,WADc,cACdA,WADc,eAIOjB,QAAQ,CAAC,EAAD,CAJf,wCAIxBkB,WAJwB,eAIXC,cAJW,8BAKOnB,QAAQ,CAAC,EAAD,CALf,yCAKxBoB,WALwB,eAKXC,cALW,8BAMerB,QAAQ,CAAC,EAAD,CANvB,yCAMxBsB,eANwB,eAMPC,kBANO,8BAOLvB,QAAQ,CAACiB,WAAW,CAACO,KAAb,CAPH,yCAOxBA,KAPwB,eAOjBC,QAPiB,eAQ/B,GAAMC,CAAAA,OAAO,CAAGhB,SAAS,EAAzB,CAEA,GAAMiB,CAAAA,QAAQ,CAAGzB,WAAW,EAA5B,CAEA;AACA;AACA;AAEA,GAAM0B,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAC9BC,KAD8B,CAE3B,CACHV,cAAc,CAACU,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAd,CACD,CAJD,CAKA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CACxBH,KADwB,CAErB,CACHJ,QAAQ,CAACI,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAR,CACD,CAJD,CAKA,GAAME,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAC9BJ,KAD8B,CAE3B,CACHR,cAAc,CAACQ,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAd,CACD,CAJD,CAKA,GAAMG,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAClCL,KADkC,CAE/B,CACHN,kBAAkB,CAACM,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAlB,CACD,CAJD,CAMA,QAASI,CAAAA,iBAAT,CAA2BN,KAA3B,CAAmD,CACjDA,KAAK,CAACO,cAAN,GAEA,GAAIhB,WAAW,GAAKE,eAApB,CAAqC,CACnCK,QAAQ,CAACf,YAAY,CAAC,wBAAD,CAAb,CAAR,CACD,CAFD,IAEO,CACLe,QAAQ,CAAChB,cAAc,CAACa,KAAD,CAAQN,WAAR,CAAqBE,WAArB,CAAf,CAAR,CACD,CACDiB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,EACD,CAED,mBACE,oBAAC,IAAD,EAAM,SAAS,CAAEb,OAAO,CAACc,SAAzB,CAAoC,SAAS,CAAE,IAA/C,CAAqD,OAAO,CAAC,QAA7D,eACE,oBAAC,IAAD,EAAM,IAAI,CAAE,IAAZ,CAAkB,EAAE,CAAE,EAAtB,CAA0B,EAAE,CAAE,EAA9B,CAAkC,EAAE,CAAE,CAAtC,eACE,gDADF,cAEE,oBAAC,IAAD,EAAM,SAAS,CAAE,CAAjB,CAAoB,MAAM,CAAE,IAA5B,CAAkC,OAAO,CAAC,WAA1C,eACE,oBAAC,WAAD,mBACE,6CACE,oBAAC,UAAD,EAAY,OAAO,CAAC,UAApB,UADF,cAEE,oBAAC,SAAD,EACE,WAAW,CAAC,OADd,CAEE,IAAI,CAAC,OAFP,CAGE,SAAS,CAAE,IAHb,CAIE,QAAQ,CAAER,iBAJZ,CAKE,KAAK,CAAER,KALT,CAME,QAAQ,CAAE,IANZ,CAOE,MAAM,CAAC,OAPT,CAQE,UAAU,CAAE,wBARd,CASE,OAAO,CAAC,UATV,CAUE,IAAI,CAAC,OAVP,CAWE,KAAK,CAAC,OAXR,CAYE,KAAK,CAAC,SACN;AAbF,EAFF,cAiBE,oBAAC,OAAD,EAAS,OAAO,CAAC,WAAjB,EAjBF,cAkBE,oBAAC,SAAD,EACE,WAAW,CAAC,cADd,CAEE,IAAI,CAAC,cAFP,CAGE,SAAS,CAAE,IAHb,CAIE,QAAQ,CAAEI,uBAJZ,CAKE,KAAK,CAAEV,WALT,CAME,QAAQ,CAAE,IANZ,CAOE,MAAM,CAAC,OAPT,CAQE,UAAU,CAAE,wBARd,CASE,OAAO,CAAC,UATV,CAUE,IAAI,CAAC,UAVP,CAWE,KAAK,CAAC,cAXR,CAYE,KAAK,CAAC,SACN;AAbF,EAlBF,cAiCE,oBAAC,OAAD,EAAS,OAAO,CAAC,WAAjB,EAjCF,cAkCE,oBAAC,UAAD,EAAY,OAAO,CAAC,UAApB,iBAlCF,cAmCE,oBAAC,SAAD,EACE,WAAW,CAAC,cADd,CAEE,IAAI,CAAC,cAFP,CAGE,QAAQ,CAAEe,uBAHZ,CAIE,SAAS,CAAE,IAJb,CAKE,KAAK,CAAEb,WALT,CAME,QAAQ,CAAE,IANZ,CAOE,MAAM,CAAC,OAPT,CAQE,UAAU,CAAE,wBARd,CASE,OAAO,CAAC,UATV,CAUE,IAAI,CAAC,UAVP,CAWE,KAAK,CAAC,cAXR,CAYE,KAAK,CAAC,SACN;AAbF,EAnCF,cAkDE,oBAAC,OAAD,EAAS,OAAO,CAAC,WAAjB,EAlDF,cAmDE,oBAAC,UAAD,EAAY,OAAO,CAAC,UAApB,qBAnDF,cAoDE,oBAAC,SAAD,EACE,WAAW,CAAC,kBADd,CAEE,IAAI,CAAC,kBAFP,CAGE,QAAQ,CAAEc,2BAHZ,CAIE,SAAS,CAAE,IAJb,CAKE,KAAK,CAAEZ,eALT,CAME,QAAQ,CAAE,IANZ,CAOE,MAAM,CAAC,OAPT,CAQE,UAAU,CAAE,wBARd,CASE,OAAO,CAAC,UATV,CAUE,IAAI,CAAC,UAVP,CAWE,KAAK,CAAC,kBAXR,CAYE,KAAK,CAAC,SACN;AAbF,EApDF,cAmEE,oBAAC,MAAD,EACE,SAAS,CAAEI,OAAO,CAACe,WADrB,CAEE,OAAO,CAAC,WAFV,CAGE,QAAQ,CAAEzB,OAHZ,CAIE,SAAS,CAAE,IAJb,CAKE,OAAO,CAAEmB,iBALX,iBAnEF,CADF,CADF,CAFF,CADF,CADF,CAwFD,CAxID,CA0IA,cAAetB,CAAAA,cAAf","sourcesContent":["import React, { useState, FC, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Card,\n  CardContent,\n  TextField,\n  Typography,\n  Divider,\n  Button,\n  Grid,\n  Avatar,\n  CardHeader,\n} from \"@material-ui/core\";\n\nimport useStyles from \"./style\";\nimport { AppState } from \"../../types\";\nimport { changePassword } from \"../../redux/actions/auth\";\nimport { alertFailure, alertSuccess } from \"../../redux/actions/alert\";\nimport { getUserByEmail } from \"../../redux/actions/users\";\n\nconst ChangePassword: FC = () => {\n  const { loading, currentUser } = useSelector(\n    (state: AppState) => state.authentication\n  );\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [email, setEmail] = useState(currentUser.email);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(getUserByEmail(email));\n  // }, [dispatch]);\n\n  const handleOldPasswordChange = (\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setOldPassword(event.currentTarget.value);\n  };\n  const handleEmailChange = (\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setEmail(event.currentTarget.value);\n  };\n  const handleNewPasswordChange = (\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setNewPassword(event.currentTarget.value);\n  };\n  const handleConfirmPasswordChange = (\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setConfirmPassword(event.currentTarget.value);\n  };\n\n  function handleChangeClick(event: React.FormEvent) {\n    event.preventDefault();\n\n    if (newPassword !== confirmPassword) {\n      dispatch(alertFailure(\"Passwords do not match\"));\n    } else {\n      dispatch(changePassword(email, oldPassword, newPassword));\n    }\n    window.location.reload(false);\n  }\n\n  return (\n    <Grid className={classes.container} container={true} justify=\"center\">\n      <Grid item={true} xs={12} md={10} lg={6}>\n        <h2>Change Password</h2>\n        <Card elevation={4} raised={true} variant=\"elevation\">\n          <CardContent>\n            <form>\n              <Typography variant=\"overline\">Email</Typography>\n              <TextField\n                placeholder=\"Email\"\n                name=\"email\"\n                fullWidth={true}\n                onChange={handleEmailChange}\n                value={email}\n                required={true}\n                margin=\"dense\"\n                helperText={\"This field is required\"}\n                variant=\"outlined\"\n                type=\"email\"\n                label=\"email\"\n                color=\"primary\"\n                // error={error.name}\n              />\n              <Divider variant=\"fullWidth\" />\n              <TextField\n                placeholder=\"Old password\"\n                name=\"old-password\"\n                fullWidth={true}\n                onChange={handleOldPasswordChange}\n                value={oldPassword}\n                required={true}\n                margin=\"dense\"\n                helperText={\"This field is required\"}\n                variant=\"outlined\"\n                type=\"password\"\n                label=\"Old password\"\n                color=\"primary\"\n                // error={error.name}\n              />\n              <Divider variant=\"fullWidth\" />\n              <Typography variant=\"overline\">New password</Typography>\n              <TextField\n                placeholder=\"New password\"\n                name=\"new-password\"\n                onChange={handleNewPasswordChange}\n                fullWidth={true}\n                value={newPassword}\n                required={true}\n                margin=\"dense\"\n                helperText={\"This field is required\"}\n                variant=\"outlined\"\n                type=\"password\"\n                label=\"New password\"\n                color=\"primary\"\n                // error={error.profession}\n              />\n              <Divider variant=\"fullWidth\" />\n              <Typography variant=\"overline\">Confirm password</Typography>\n              <TextField\n                placeholder=\"Comfirm password\"\n                name=\"comfirm-password\"\n                onChange={handleConfirmPasswordChange}\n                fullWidth={true}\n                value={confirmPassword}\n                required={true}\n                margin=\"dense\"\n                helperText={\"This field is required\"}\n                variant=\"outlined\"\n                type=\"password\"\n                label=\"Confirm password\"\n                color=\"primary\"\n                // error={error.profession}\n              />\n              <Button\n                className={classes.buttonColor}\n                variant=\"contained\"\n                disabled={loading}\n                fullWidth={true}\n                onClick={handleChangeClick}\n              >\n                Save Changes\n              </Button>\n            </form>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}