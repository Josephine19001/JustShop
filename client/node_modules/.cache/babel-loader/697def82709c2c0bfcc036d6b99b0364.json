{"ast":null,"code":"import axios from\"axios\";import{CHECKOUT_SUCCESS,CHECKOUT_FAILURE,CHECKOUT_REQUEST}from\"../../types\";var baseURL=\"/api/v1/products\";//Checkout\nexport var checkoutRequest=function checkoutRequest(){return{type:CHECKOUT_REQUEST};};export var checkoutSuccess=function checkoutSuccess(){return{type:CHECKOUT_SUCCESS};};export var checkoutFailure=function checkoutFailure(error){return{type:CHECKOUT_FAILURE,payload:{error:error}};};export var checkout=function checkout(product){return function(dispatch){dispatch(checkoutRequest());axios({method:\"post\",url:\"\".concat(baseURL,\"/payment\"),headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"USER-TOKEN\"))},data:product}).then(function(response){var res=response.status;dispatch(checkoutSuccess());}).catch(function(error){dispatch(checkoutFailure(error));});};};","map":{"version":3,"sources":["/Users/Josephine/Documents/Integrify-full-stack/full-stack-4-typescript-men-boilerplate/frontend/src/redux/actions/orders.ts"],"names":["axios","CHECKOUT_SUCCESS","CHECKOUT_FAILURE","CHECKOUT_REQUEST","baseURL","checkoutRequest","type","checkoutSuccess","checkoutFailure","error","payload","checkout","product","dispatch","method","url","headers","Authorization","localStorage","getItem","data","then","response","res","status","catch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OACEC,gBADF,CAEEC,gBAFF,CAGEC,gBAHF,KAIO,aAJP,CAOA,GAAMC,CAAAA,OAAO,CAAG,kBAAhB,CAEA;AACA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACnC,MAAO,CACLC,IAAI,CAAEH,gBADD,CAAP,CAGD,CAJM,CAKP,MAAO,IAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACnC,MAAO,CACLD,IAAI,CAAEL,gBADD,CAAP,CAGD,CAJM,CAKP,MAAO,IAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAmB,CAChD,MAAO,CACLH,IAAI,CAAEJ,gBADD,CAELQ,OAAO,CAAE,CACPD,KAAK,CAALA,KADO,CAFJ,CAAP,CAMD,CAPM,CASP,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,OAAD,CAAkB,CACxC,MAAO,UAAUC,QAAV,CAA8B,CACnCA,QAAQ,CAACR,eAAe,EAAhB,CAAR,CAEAL,KAAK,CAAC,CACJc,MAAM,CAAE,MADJ,CAEJC,GAAG,WAAKX,OAAL,YAFC,CAGJY,OAAO,CAAE,CACPC,aAAa,kBAAYC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ,CADN,CAHL,CAMJC,IAAI,CAAER,OANF,CAAD,CAAL,CAQGS,IARH,CAQQ,SAACC,QAAD,CAAc,CAClB,GAAMC,CAAAA,GAAG,CAAGD,QAAQ,CAACE,MAArB,CAEAX,QAAQ,CAACN,eAAe,EAAhB,CAAR,CACD,CAZH,EAaGkB,KAbH,CAaS,SAAChB,KAAD,CAAW,CAChBI,QAAQ,CAACL,eAAe,CAACC,KAAD,CAAhB,CAAR,CACD,CAfH,EAgBD,CAnBD,CAoBD,CArBM","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\n\nimport {\n  CHECKOUT_SUCCESS,\n  CHECKOUT_FAILURE,\n  CHECKOUT_REQUEST,\n} from \"../../types\";\nimport { alertSuccess, alertFailure } from \"./alert\";\n\nconst baseURL = \"/api/v1/products\";\n\n//Checkout\nexport const checkoutRequest = () => {\n  return {\n    type: CHECKOUT_REQUEST,\n  };\n};\nexport const checkoutSuccess = () => {\n  return {\n    type: CHECKOUT_SUCCESS,\n  };\n};\nexport const checkoutFailure = (error: string) => {\n  return {\n    type: CHECKOUT_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const checkout = (product: any) => {\n  return function (dispatch: Dispatch) {\n    dispatch(checkoutRequest());\n\n    axios({\n      method: \"post\",\n      url: `${baseURL}/payment`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n      },\n      data: product,\n    })\n      .then((response) => {\n        const res = response.status;\n\n        dispatch(checkoutSuccess());\n      })\n      .catch((error) => {\n        dispatch(checkoutFailure(error));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}