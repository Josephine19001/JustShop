{"ast":null,"code":"import _objectSpread from\"/Users/Josephine/Documents/Integrify-full-stack/full-stack-4-typescript-men-boilerplate/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{CHECKOUT_FAILURE,CHECKOUT_REQUEST,CHECKOUT_SUCCESS}from\"../../types\";var initialState={orders:[],error:\"\",loading:false};export default function ordersReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CHECKOUT_REQUEST:return _objectSpread(_objectSpread({},state),{},{loading:true});case CHECKOUT_FAILURE:return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});case CHECKOUT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,allProducts:action.payload.products});default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Users/Josephine/Documents/Integrify-full-stack/full-stack-4-typescript-men-boilerplate/frontend/src/redux/reducers/orders.ts"],"names":["CHECKOUT_FAILURE","CHECKOUT_REQUEST","CHECKOUT_SUCCESS","initialState","orders","error","loading","ordersReducer","state","action","type","payload","allProducts","products"],"mappings":"kLAAA,OACEA,gBADF,CAEEC,gBAFF,CAGEC,gBAHF,KAIO,aAJP,CAMA,GAAMC,CAAAA,YAAiB,CAAG,CACxBC,MAAM,CAAE,EADgB,CAExBC,KAAK,CAAE,EAFiB,CAGxBC,OAAO,CAAE,KAHe,CAA1B,CAMA,cAAe,SAASC,CAAAA,aAAT,EAA0D,IAAnCC,CAAAA,KAAmC,2DAA3BL,YAA2B,IAAbM,CAAAA,MAAa,2CACvE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKT,CAAAA,gBAAL,CACE,sCACKO,KADL,MAEEF,OAAO,CAAE,IAFX,GAIF,IAAKN,CAAAA,gBAAL,CACE,sCACKQ,KADL,MAEEF,OAAO,CAAE,KAFX,CAGED,KAAK,CAAEI,MAAM,CAACE,OAHhB,GAKF,IAAKT,CAAAA,gBAAL,CACE,sCACKM,KADL,MAEEF,OAAO,CAAE,KAFX,CAGEM,WAAW,CAAEH,MAAM,CAACE,OAAP,CAAeE,QAH9B,GAKF,QACE,wBAAYL,KAAZ,EAnBJ,CAqBD","sourcesContent":["import {\n  CHECKOUT_FAILURE,\n  CHECKOUT_REQUEST,\n  CHECKOUT_SUCCESS,\n} from \"../../types\";\n\nconst initialState: any = {\n  orders: [],\n  error: \"\",\n  loading: false,\n};\n\nexport default function ordersReducer(state = initialState, action: any) {\n  switch (action.type) {\n    case CHECKOUT_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case CHECKOUT_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case CHECKOUT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        allProducts: action.payload.products,\n      };\n    default:\n      return { ...state };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}