{"ast":null,"code":"var _jsxFileName = \"/Users/Josephine/Documents/JustShop/client/src/components/ChangePassword/ChangePassword.tsx\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Card, CardContent, TextField, Typography, Divider, Button, Grid } from \"@material-ui/core\";\nimport useStyles from \"./style\";\nimport { changePassword } from \"../../redux/actions/auth\";\nimport { alertFailure } from \"../../redux/actions/alert\";\n\nconst ChangePassword = () => {\n  const {\n    loading,\n    currentUser\n  } = useSelector(state => state.authentication);\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [email, setEmail] = useState(currentUser.email);\n  const classes = useStyles();\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   dispatch(getUserByEmail(email));\n  // }, [dispatch]);\n\n  const handleOldPasswordChange = event => {\n    setOldPassword(event.currentTarget.value);\n  };\n\n  const handleEmailChange = event => {\n    setEmail(event.currentTarget.value);\n  };\n\n  const handleNewPasswordChange = event => {\n    setNewPassword(event.currentTarget.value);\n  };\n\n  const handleConfirmPasswordChange = event => {\n    setConfirmPassword(event.currentTarget.value);\n  };\n\n  function handleChangeClick(event) {\n    event.preventDefault();\n\n    if (newPassword !== confirmPassword) {\n      dispatch(alertFailure(\"Passwords do not match\"));\n    } else {\n      dispatch(changePassword(email, oldPassword, newPassword));\n    }\n\n    window.location.reload(false);\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 10,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Change Password\"), /*#__PURE__*/React.createElement(Card, {\n    elevation: 4,\n    raised: true,\n    variant: \"elevation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"Email\",\n    name: \"email\",\n    fullWidth: true,\n    onChange: handleEmailChange,\n    value: email,\n    required: true,\n    margin: \"dense\",\n    helperText: \"This field is required\",\n    variant: \"outlined\",\n    type: \"email\",\n    label: \"email\",\n    color: \"primary\" // error={error.name}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"Old password\",\n    name: \"old-password\",\n    fullWidth: true,\n    onChange: handleOldPasswordChange,\n    value: oldPassword,\n    required: true,\n    margin: \"dense\",\n    helperText: \"This field is required\",\n    variant: \"outlined\",\n    type: \"password\",\n    label: \"Old password\",\n    color: \"primary\" // error={error.name}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"New password\"), /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"New password\",\n    name: \"new-password\",\n    onChange: handleNewPasswordChange,\n    fullWidth: true,\n    value: newPassword,\n    required: true,\n    margin: \"dense\",\n    helperText: \"This field is required\",\n    variant: \"outlined\",\n    type: \"password\",\n    label: \"New password\",\n    color: \"primary\" // error={error.profession}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Confirm password\"), /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"Comfirm password\",\n    name: \"comfirm-password\",\n    onChange: handleConfirmPasswordChange,\n    fullWidth: true,\n    value: confirmPassword,\n    required: true,\n    margin: \"dense\",\n    helperText: \"This field is required\",\n    variant: \"outlined\",\n    type: \"password\",\n    label: \"Confirm password\",\n    color: \"primary\" // error={error.profession}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonColor,\n    variant: \"contained\",\n    disabled: loading,\n    fullWidth: true,\n    onClick: handleChangeClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"Save Changes\"))))));\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["/Users/Josephine/Documents/JustShop/client/src/components/ChangePassword/ChangePassword.tsx"],"names":["React","useState","useSelector","useDispatch","Card","CardContent","TextField","Typography","Divider","Button","Grid","useStyles","changePassword","alertFailure","ChangePassword","loading","currentUser","state","authentication","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","email","setEmail","classes","dispatch","handleOldPasswordChange","event","currentTarget","value","handleEmailChange","handleNewPasswordChange","handleConfirmPasswordChange","handleChangeClick","preventDefault","window","location","reload","container","buttonColor"],"mappings":"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","sourcesContent":["import React, { useState, FC, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Card,\n  CardContent,\n  TextField,\n  Typography,\n  Divider,\n  Button,\n  Grid,\n  Avatar,\n  CardHeader,\n} from \"@material-ui/core\";\n\nimport useStyles from \"./style\";\nimport { AppState } from \"../../types\";\nimport { changePassword } from \"../../redux/actions/auth\";\nimport { alertFailure, alertSuccess } from \"../../redux/actions/alert\";\nimport { getUserByEmail } from \"../../redux/actions/users\";\n\nconst ChangePassword: FC = () => {\n  const { loading, currentUser } = useSelector(\n    (state: AppState) => state.authentication\n  );\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [email, setEmail] = useState(currentUser.email);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(getUserByEmail(email));\n  // }, [dispatch]);\n\n  const handleOldPasswordChange = (\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setOldPassword(event.currentTarget.value);\n  };\n  const handleEmailChange = (\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setEmail(event.currentTarget.value);\n  };\n  const handleNewPasswordChange = (\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setNewPassword(event.currentTarget.value);\n  };\n  const handleConfirmPasswordChange = (\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setConfirmPassword(event.currentTarget.value);\n  };\n\n  function handleChangeClick(event: React.FormEvent) {\n    event.preventDefault();\n\n    if (newPassword !== confirmPassword) {\n      dispatch(alertFailure(\"Passwords do not match\"));\n    } else {\n      dispatch(changePassword(email, oldPassword, newPassword));\n    }\n    window.location.reload(false);\n  }\n\n  return (\n    <Grid className={classes.container} container={true} justify=\"center\">\n      <Grid item={true} xs={12} md={10} lg={6}>\n        <h2>Change Password</h2>\n        <Card elevation={4} raised={true} variant=\"elevation\">\n          <CardContent>\n            <form>\n              <Typography variant=\"overline\">Email</Typography>\n              <TextField\n                placeholder=\"Email\"\n                name=\"email\"\n                fullWidth={true}\n                onChange={handleEmailChange}\n                value={email}\n                required={true}\n                margin=\"dense\"\n                helperText={\"This field is required\"}\n                variant=\"outlined\"\n                type=\"email\"\n                label=\"email\"\n                color=\"primary\"\n                // error={error.name}\n              />\n              <Divider variant=\"fullWidth\" />\n              <TextField\n                placeholder=\"Old password\"\n                name=\"old-password\"\n                fullWidth={true}\n                onChange={handleOldPasswordChange}\n                value={oldPassword}\n                required={true}\n                margin=\"dense\"\n                helperText={\"This field is required\"}\n                variant=\"outlined\"\n                type=\"password\"\n                label=\"Old password\"\n                color=\"primary\"\n                // error={error.name}\n              />\n              <Divider variant=\"fullWidth\" />\n              <Typography variant=\"overline\">New password</Typography>\n              <TextField\n                placeholder=\"New password\"\n                name=\"new-password\"\n                onChange={handleNewPasswordChange}\n                fullWidth={true}\n                value={newPassword}\n                required={true}\n                margin=\"dense\"\n                helperText={\"This field is required\"}\n                variant=\"outlined\"\n                type=\"password\"\n                label=\"New password\"\n                color=\"primary\"\n                // error={error.profession}\n              />\n              <Divider variant=\"fullWidth\" />\n              <Typography variant=\"overline\">Confirm password</Typography>\n              <TextField\n                placeholder=\"Comfirm password\"\n                name=\"comfirm-password\"\n                onChange={handleConfirmPasswordChange}\n                fullWidth={true}\n                value={confirmPassword}\n                required={true}\n                margin=\"dense\"\n                helperText={\"This field is required\"}\n                variant=\"outlined\"\n                type=\"password\"\n                label=\"Confirm password\"\n                color=\"primary\"\n                // error={error.profession}\n              />\n              <Button\n                className={classes.buttonColor}\n                variant=\"contained\"\n                disabled={loading}\n                fullWidth={true}\n                onClick={handleChangeClick}\n              >\n                Save Changes\n              </Button>\n            </form>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}