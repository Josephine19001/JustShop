{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ALL_USERS_FAILURE, GET_ALL_USERS_REQUEST, GET_ALL_USERS_SUCCESS, FIND_USER_BY_FAILURE, FIND_USER_BY_REQUEST, FIND_USER_BY_SUCCESS, FIND_USER_BY_EMAIL_FAILURE, FIND_USER_BY_EMAIL_REQUEST, FIND_USER_BY_EMAIL_SUCCESS, BAN_SUCCESS, BAN_FAILURE, BAN_REQUEST, CHANGE_ROLE_SUCCESS, CHANGE_ROLE_FAILURE, CHANGE_ROLE_REQUEST } from \"../../types\";\nimport { alertSuccess, alertFailure } from \"./alert\";\nconst baseURL = \"/api/v1/users\";\nexport const getAllUsersRequest = () => {\n  return {\n    type: GET_ALL_USERS_REQUEST\n  };\n};\nexport const getAllUsersSuccess = users => {\n  return {\n    type: GET_ALL_USERS_SUCCESS,\n    payload: {\n      users\n    }\n  };\n};\nexport const getAllUsersFailure = error => {\n  return {\n    type: GET_ALL_USERS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\nexport const getAllUsers = () => {\n  return function (dispatch) {\n    dispatch(getAllUsersRequest());\n    axios({\n      method: \"get\",\n      url: baseURL,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      }\n    }).then(response => {\n      const users = response.data;\n      dispatch(getAllUsersSuccess(users));\n    }).catch(error => {\n      dispatch(getAllUsersFailure(error.response.data.message));\n    });\n  };\n}; // Ban User\n\nexport const banRequest = () => {\n  return {\n    type: BAN_REQUEST\n  };\n};\nexport const banSuccess = user => {\n  return {\n    type: BAN_SUCCESS,\n    payload: {\n      user\n    }\n  };\n};\nexport const banFailure = error => {\n  return {\n    type: BAN_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\nexport const banUser = (email, history) => {\n  return function (dispatch) {\n    dispatch(banRequest());\n    axios({\n      method: \"put\",\n      url: `${baseURL}/ban`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      },\n      data: {\n        email: email\n      }\n    }).then(response => {\n      const user = response.data;\n      console.log(response.data);\n      dispatch(banSuccess(user));\n      dispatch(alertSuccess(\"User Banned successfully\"));\n      history.push(\"/users\");\n    }).catch(error => {\n      dispatch(banFailure(error.response.data.message));\n      dispatch(alertFailure(error.response.data.message));\n    });\n  };\n}; // Update Role\n\nexport const changeRoleRequest = () => {\n  return {\n    type: CHANGE_ROLE_REQUEST\n  };\n};\nexport const changeRoleSuccess = user => {\n  return {\n    type: CHANGE_ROLE_SUCCESS,\n    payload: {\n      user\n    }\n  };\n};\nexport const changeRoleFailure = error => {\n  return {\n    type: CHANGE_ROLE_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\nexport const changeUserRole = (email, history) => {\n  return function (dispatch) {\n    dispatch(changeRoleRequest());\n    axios({\n      method: \"put\",\n      url: `${baseURL}/role`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      },\n      data: {\n        email: email\n      }\n    }).then(response => {\n      const user = response.data;\n      console.log(response.data);\n      dispatch(changeRoleSuccess(user));\n      dispatch(alertSuccess(\"User role updated successfully\"));\n      history.push(\"/users\");\n    }).catch(error => {\n      dispatch(changeRoleFailure(error));\n    });\n  };\n}; //find User action\n\nexport const getUserByIdRequest = () => {\n  return {\n    type: FIND_USER_BY_REQUEST\n  };\n};\nexport const getUserByIdSuccess = id => {\n  return {\n    type: FIND_USER_BY_SUCCESS,\n    payload: {\n      id\n    }\n  };\n};\nexport const getUserByIdFailure = error => {\n  return {\n    type: FIND_USER_BY_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\nexport const getUserById = id => {\n  return function (dispatch) {\n    dispatch(getUserByIdRequest());\n    axios({\n      method: \"get\",\n      url: `${baseURL}/${id}`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      },\n      data: id\n    }).then(response => {\n      const res = response.data;\n      dispatch(getUserByIdSuccess(res));\n    }).catch(error => {\n      dispatch(getUserByIdFailure(error));\n    });\n  };\n}; //find User action\n\nexport const getUserByEmailRequest = () => {\n  return {\n    type: FIND_USER_BY_EMAIL_REQUEST\n  };\n};\nexport const getUserByEmailSuccess = email => {\n  return {\n    type: FIND_USER_BY_EMAIL_SUCCESS,\n    payload: {\n      email\n    }\n  };\n};\nexport const getUserByEmailFailure = error => {\n  return {\n    type: FIND_USER_BY_EMAIL_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\nexport const getUserByEmail = email => {\n  return function (dispatch) {\n    dispatch(getUserByEmailRequest());\n    axios({\n      method: \"get\",\n      url: `${baseURL}/email`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      },\n      data: email\n    }).then(response => {\n      const res = response.data;\n      dispatch(getUserByEmailSuccess(res));\n    }).catch(error => {\n      dispatch(getUserByEmailFailure(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Josephine/Documents/Integrify-full-stack/full-stack-4-typescript-men-boilerplate/client/src/redux/actions/users.ts"],"names":["axios","GET_ALL_USERS_FAILURE","GET_ALL_USERS_REQUEST","GET_ALL_USERS_SUCCESS","FIND_USER_BY_FAILURE","FIND_USER_BY_REQUEST","FIND_USER_BY_SUCCESS","FIND_USER_BY_EMAIL_FAILURE","FIND_USER_BY_EMAIL_REQUEST","FIND_USER_BY_EMAIL_SUCCESS","BAN_SUCCESS","BAN_FAILURE","BAN_REQUEST","CHANGE_ROLE_SUCCESS","CHANGE_ROLE_FAILURE","CHANGE_ROLE_REQUEST","alertSuccess","alertFailure","baseURL","getAllUsersRequest","type","getAllUsersSuccess","users","payload","getAllUsersFailure","error","getAllUsers","dispatch","method","url","headers","Authorization","localStorage","getItem","then","response","data","catch","message","banRequest","banSuccess","user","banFailure","banUser","email","history","console","log","push","changeRoleRequest","changeRoleSuccess","changeRoleFailure","changeUserRole","getUserByIdRequest","getUserByIdSuccess","id","getUserByIdFailure","getUserById","res","getUserByEmailRequest","getUserByEmailSuccess","getUserByEmailFailure","getUserByEmail"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\n\nimport {\n  GET_ALL_USERS_FAILURE,\n  GET_ALL_USERS_REQUEST,\n  GET_ALL_USERS_SUCCESS,\n  FIND_USER_BY_FAILURE,\n  FIND_USER_BY_REQUEST,\n  FIND_USER_BY_SUCCESS,\n  FIND_USER_BY_EMAIL_FAILURE,\n  FIND_USER_BY_EMAIL_REQUEST,\n  FIND_USER_BY_EMAIL_SUCCESS,\n  BAN_SUCCESS,\n  BAN_FAILURE,\n  BAN_REQUEST,\n  CHANGE_ROLE_SUCCESS,\n  CHANGE_ROLE_FAILURE,\n  CHANGE_ROLE_REQUEST,\n  UserActions,\n  UserState,\n} from \"../../types\";\nimport { alertSuccess, alertFailure } from \"./alert\";\n\nconst baseURL = \"/api/v1/users\";\n\nexport const getAllUsersRequest = (): UserActions => {\n  return {\n    type: GET_ALL_USERS_REQUEST,\n  };\n};\nexport const getAllUsersSuccess = (users: UserState[]): UserActions => {\n  return {\n    type: GET_ALL_USERS_SUCCESS,\n    payload: {\n      users,\n    },\n  };\n};\nexport const getAllUsersFailure = (error: string): UserActions => {\n  return {\n    type: GET_ALL_USERS_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const getAllUsers = () => {\n  return function (dispatch: Dispatch) {\n    dispatch(getAllUsersRequest());\n\n    axios({\n      method: \"get\",\n      url: baseURL,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n      },\n    })\n      .then((response) => {\n        const users = response.data;\n        dispatch(getAllUsersSuccess(users));\n      })\n      .catch((error) => {\n        dispatch(getAllUsersFailure(error.response.data.message));\n      });\n  };\n};\n\n// Ban User\nexport const banRequest = () => {\n  return {\n    type: BAN_REQUEST,\n  };\n};\nexport const banSuccess = (user: UserState) => {\n  return {\n    type: BAN_SUCCESS,\n    payload: {\n      user,\n    },\n  };\n};\nexport const banFailure = (error: string) => {\n  return {\n    type: BAN_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const banUser = (email: string, history: any) => {\n  return function (dispatch: Dispatch) {\n    dispatch(banRequest());\n\n    axios({\n      method: \"put\",\n      url: `${baseURL}/ban`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n      },\n      data: { email: email },\n    })\n      .then((response) => {\n        const user = response.data;\n        console.log(response.data);\n        dispatch(banSuccess(user));\n        dispatch(alertSuccess(\"User Banned successfully\"));\n        history.push(\"/users\");\n      })\n      .catch((error) => {\n        dispatch(banFailure(error.response.data.message));\n        dispatch(alertFailure(error.response.data.message));\n      });\n  };\n};\n\n// Update Role\nexport const changeRoleRequest = () => {\n  return {\n    type: CHANGE_ROLE_REQUEST,\n  };\n};\nexport const changeRoleSuccess = (user: UserState) => {\n  return {\n    type: CHANGE_ROLE_SUCCESS,\n    payload: {\n      user,\n    },\n  };\n};\nexport const changeRoleFailure = (error: string) => {\n  return {\n    type: CHANGE_ROLE_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const changeUserRole = (email: string, history: any) => {\n  return function (dispatch: Dispatch) {\n    dispatch(changeRoleRequest());\n\n    axios({\n      method: \"put\",\n      url: `${baseURL}/role`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n      },\n      data: { email: email },\n    })\n      .then((response) => {\n        const user = response.data;\n        console.log(response.data);\n        dispatch(changeRoleSuccess(user));\n        dispatch(alertSuccess(\"User role updated successfully\"));\n        history.push(\"/users\");\n      })\n      .catch((error) => {\n        dispatch(changeRoleFailure(error));\n      });\n  };\n};\n\n//find User action\nexport const getUserByIdRequest = () => {\n  return {\n    type: FIND_USER_BY_REQUEST,\n  };\n};\nexport const getUserByIdSuccess = (id: string) => {\n  return {\n    type: FIND_USER_BY_SUCCESS,\n    payload: {\n      id,\n    },\n  };\n};\nexport const getUserByIdFailure = (error: string) => {\n  return {\n    type: FIND_USER_BY_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const getUserById = (id: string) => {\n  return function (dispatch: Dispatch) {\n    dispatch(getUserByIdRequest());\n\n    axios({\n      method: \"get\",\n      url: `${baseURL}/${id}`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n      },\n      data: id,\n    })\n      .then((response) => {\n        const res = response.data;\n\n        dispatch(getUserByIdSuccess(res));\n      })\n      .catch((error) => {\n        dispatch(getUserByIdFailure(error));\n      });\n  };\n};\n\n//find User action\nexport const getUserByEmailRequest = () => {\n  return {\n    type: FIND_USER_BY_EMAIL_REQUEST,\n  };\n};\nexport const getUserByEmailSuccess = (email: string) => {\n  return {\n    type: FIND_USER_BY_EMAIL_SUCCESS,\n    payload: {\n      email,\n    },\n  };\n};\nexport const getUserByEmailFailure = (error: string) => {\n  return {\n    type: FIND_USER_BY_EMAIL_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const getUserByEmail = (email: string) => {\n  return function (dispatch: Dispatch) {\n    dispatch(getUserByEmailRequest());\n\n    axios({\n      method: \"get\",\n      url: `${baseURL}/email`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n      },\n      data: email,\n    })\n      .then((response) => {\n        const res = response.data;\n\n        dispatch(getUserByEmailSuccess(res));\n      })\n      .catch((error) => {\n        dispatch(getUserByEmailFailure(error));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}