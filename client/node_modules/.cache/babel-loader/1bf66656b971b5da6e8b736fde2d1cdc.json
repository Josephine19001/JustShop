{"ast":null,"code":"import { ADD_PRODUCT, INCREASE_QUANTITY, DECREASE_QUANTITY, REMOVE_PRODUCT } from \"../../types\";\nconst initialState = {\n  inCart: []\n};\nexport default function product(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      {\n        const {\n          product\n        } = action.payload;\n        return { ...state,\n          inCart: [...state.inCart, product]\n        };\n      }\n\n    case REMOVE_PRODUCT:\n      {\n        const {\n          product\n        } = action.payload;\n        const index = state.inCart.findIndex(p => p.name === product.name);\n\n        if (index >= 0) {\n          state.inCart.splice(index, 1);\n          return { ...state,\n            inCart: [...state.inCart]\n          };\n        }\n\n        return state;\n      }\n\n    case INCREASE_QUANTITY:\n      {\n        const productId = action.payload.product._id;\n        return { ...state,\n          inCart: state.inCart.map(product => product._id === productId && product.amountInCart < product.quantity ? { ...product,\n            amountInCart: product.amountInCart + 1\n          } : product)\n        };\n      }\n\n    case DECREASE_QUANTITY:\n      {\n        const productId = action.payload.product._id;\n        return { ...state,\n          inCart: state.inCart.map(product => product._id === productId ? { ...product,\n            amountInCart: product.amountInCart - 1\n          } : product)\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Josephine/Documents/JustShop/client/src/redux/reducers/cart.ts"],"names":["ADD_PRODUCT","INCREASE_QUANTITY","DECREASE_QUANTITY","REMOVE_PRODUCT","initialState","inCart","product","state","action","type","payload","index","findIndex","p","name","splice","productId","_id","map","amountInCart","quantity"],"mappings":"AAAA,SAGEA,WAHF,EAIEC,iBAJF,EAKEC,iBALF,EAOEC,cAPF,QASO,aATP;AAWA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,MAAM,EAAE;AADsB,CAAhC;AAIA,eAAe,SAASC,OAAT,CACbC,KAAK,GAAGH,YADK,EAEbI,MAFa,EAGF;AACX,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAL;AAAkB;AAChB,cAAM;AAAEM,UAAAA;AAAF,YAAcE,MAAM,CAACE,OAA3B;AACA,eAAO,EAAE,GAAGH,KAAL;AAAYF,UAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBC,OAAlB;AAApB,SAAP;AACD;;AAED,SAAKH,cAAL;AAAqB;AACnB,cAAM;AAAEG,UAAAA;AAAF,YAAcE,MAAM,CAACE,OAA3B;AACA,cAAMC,KAAK,GAAGJ,KAAK,CAACF,MAAN,CAAaO,SAAb,CAAwBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWR,OAAO,CAACQ,IAAjD,CAAd;;AACA,YAAIH,KAAK,IAAI,CAAb,EAAgB;AACdJ,UAAAA,KAAK,CAACF,MAAN,CAAaU,MAAb,CAAoBJ,KAApB,EAA2B,CAA3B;AACA,iBAAO,EAAE,GAAGJ,KAAL;AAAYF,YAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV;AAApB,WAAP;AACD;;AACD,eAAOE,KAAP;AACD;;AACD,SAAKN,iBAAL;AAAwB;AACtB,cAAMe,SAAS,GAAGR,MAAM,CAACE,OAAP,CAAeJ,OAAf,CAAuBW,GAAzC;AACA,eAAO,EACL,GAAGV,KADE;AAELF,UAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaa,GAAb,CAAkBZ,OAAD,IACvBA,OAAO,CAACW,GAAR,KAAgBD,SAAhB,IAA6BV,OAAO,CAACa,YAAR,GAAuBb,OAAO,CAACc,QAA5D,GACI,EAAE,GAAGd,OAAL;AAAca,YAAAA,YAAY,EAAEb,OAAO,CAACa,YAAR,GAAuB;AAAnD,WADJ,GAEIb,OAHE;AAFH,SAAP;AAQD;;AACD,SAAKJ,iBAAL;AAAwB;AACtB,cAAMc,SAAS,GAAGR,MAAM,CAACE,OAAP,CAAeJ,OAAf,CAAuBW,GAAzC;AACA,eAAO,EACL,GAAGV,KADE;AAELF,UAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaa,GAAb,CAAkBZ,OAAD,IACvBA,OAAO,CAACW,GAAR,KAAgBD,SAAhB,GACI,EACE,GAAGV,OADL;AAEEa,YAAAA,YAAY,EAAEb,OAAO,CAACa,YAAR,GAAuB;AAFvC,WADJ,GAKIb,OANE;AAFH,SAAP;AAWD;;AACD;AACE,aAAOC,KAAP;AAzCJ;AA2CD","sourcesContent":["import {\n  CartState,\n  ProductActions,\n  ADD_PRODUCT,\n  INCREASE_QUANTITY,\n  DECREASE_QUANTITY,\n  EMPTY_CART,\n  REMOVE_PRODUCT,\n  ProductState,\n} from \"../../types\";\n\nconst initialState: CartState = {\n  inCart: [],\n};\n\nexport default function product(\n  state = initialState,\n  action: ProductActions\n): CartState {\n  switch (action.type) {\n    case ADD_PRODUCT: {\n      const { product } = action.payload;\n      return { ...state, inCart: [...state.inCart, product] };\n    }\n\n    case REMOVE_PRODUCT: {\n      const { product } = action.payload;\n      const index = state.inCart.findIndex((p) => p.name === product.name);\n      if (index >= 0) {\n        state.inCart.splice(index, 1);\n        return { ...state, inCart: [...state.inCart] };\n      }\n      return state;\n    }\n    case INCREASE_QUANTITY: {\n      const productId = action.payload.product._id;\n      return {\n        ...state,\n        inCart: state.inCart.map((product) =>\n          product._id === productId && product.amountInCart < product.quantity\n            ? { ...product, amountInCart: product.amountInCart + 1 }\n            : product\n        ),\n      };\n    }\n    case DECREASE_QUANTITY: {\n      const productId = action.payload.product._id;\n      return {\n        ...state,\n        inCart: state.inCart.map((product) =>\n          product._id === productId\n            ? {\n                ...product,\n                amountInCart: product.amountInCart - 1,\n              }\n            : product\n        ),\n      };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}