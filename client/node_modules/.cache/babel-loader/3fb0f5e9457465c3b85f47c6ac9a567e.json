{"ast":null,"code":"var _jsxFileName = \"/Users/Josephine/Documents/Integrify-full-stack/full-stack-4-typescript-men-boilerplate/client/src/components/UpdateProduct/UpdateProduct.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport { Card, CardContent, Grid } from \"@material-ui/core\";\nimport useStyles from \"../ChangePassword/style\";\nimport { updateProduct, getProductById } from \"../../redux/actions/products\";\nconst categories = [{\n  value: \"clothing\",\n  label: \"clothing\"\n}, {\n  value: \"shoes\",\n  label: \"shoes\"\n}, {\n  value: \"accessories\",\n  label: \"accessories\"\n}];\n\nconst UpdateProduct = () => {\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      dispatch(getProductById(id));\n    }\n  }, [dispatch, id]);\n  const initialState = {\n    _id: \"\",\n    name: \"\",\n    category: \"\",\n    sizes: \"\",\n    variants: \"\",\n    description: \"\",\n    price: \"\",\n    image: \"\",\n    quantity: 0,\n    amountInCart: 0\n  };\n  const {\n    loading,\n    currentProduct\n  } = useSelector(state => state.products);\n  console.log(\"Current Product\", currentProduct);\n  const [product, setProduct] = useState(initialState);\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setProduct({ ...product,\n      [event.currentTarget.name]: event.currentTarget.value\n    });\n  };\n\n  const handleUpdateProduct = event => {\n    event.preventDefault();\n    dispatch(updateProduct(id, product));\n    window.location.reload(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 10,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Update Product\"), /*#__PURE__*/React.createElement(Card, {\n    elevation: 4,\n    raised: true,\n    variant: \"elevation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-full-width\",\n    label: \"Name\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Name\",\n    helperText: \"Required!\",\n    fullWidth: true,\n    margin: \"normal\",\n    value: product.name,\n    onChange: handleChange,\n    name: \"name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\" // defaultValue={\n    //   currentProduct && currentProduct.name\n    //     ? currentProduct.id.name\n    //     : null\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Description\",\n    id: \"outlined-full-width\",\n    defaultValue: \"Default Value\",\n    className: classes.textField,\n    helperText: \"Required!\",\n    value: product.description,\n    onChange: handleChange,\n    name: \"description\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-full-width\",\n    select: true,\n    label: \"Select\",\n    value: product.category,\n    onChange: handleChange,\n    name: \"category\",\n    helperText: \"Please select your category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, categories.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, option.label))), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Sizes\",\n    id: \"outlined-full-width\",\n    defaultValue: \"Default Value\",\n    className: classes.textField,\n    helperText: \"Required!\",\n    margin: \"dense\",\n    value: product.sizes,\n    onChange: handleChange,\n    name: \"sizes\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Variants\",\n    id: \"outlined-full-width\",\n    defaultValue: \"Default Value\",\n    className: classes.textField,\n    helperText: \"Required!\",\n    value: product.variants,\n    onChange: handleChange,\n    name: \"variants\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Price\",\n    id: \"outlined-full-width\",\n    defaultValue: \"Default Value\",\n    className: classes.textField,\n    helperText: \"Required!\",\n    value: product.price,\n    onChange: handleChange,\n    name: \"price\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Image Url\",\n    id: \"outlined-full-width\",\n    defaultValue: \"Default Value\",\n    className: classes.textField,\n    helperText: \"Not Required\",\n    value: product.image,\n    onChange: handleChange,\n    name: \"image\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Quantity in Stock\",\n    id: \"outlined-full-width\",\n    defaultValue: \"Default Value\",\n    className: classes.textField,\n    helperText: \"Number of products in stock\",\n    value: product.quantity,\n    onChange: handleChange,\n    name: \"quantity\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonColor,\n    variant: \"contained\",\n    disabled: loading,\n    fullWidth: true,\n    onClick: handleUpdateProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Update Product\"))))));\n};\n\nexport default UpdateProduct;","map":{"version":3,"sources":["/Users/Josephine/Documents/Integrify-full-stack/full-stack-4-typescript-men-boilerplate/client/src/components/UpdateProduct/UpdateProduct.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","TextField","MenuItem","Button","Card","CardContent","Grid","useStyles","updateProduct","getProductById","categories","value","label","UpdateProduct","dispatch","id","initialState","_id","name","category","sizes","variants","description","price","image","quantity","amountInCart","loading","currentProduct","state","products","console","log","product","setProduct","classes","handleChange","event","currentTarget","handleUpdateProduct","preventDefault","window","location","reload","container","margin","shrink","textField","map","option","buttonColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, FC } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport { Card, CardContent, Grid } from \"@material-ui/core\";\n\nimport useStyles from \"../ChangePassword/style\";\nimport { AppState, ProductState } from \"../../types\";\nimport { updateProduct, getProductById } from \"../../redux/actions/products\";\n\nconst categories = [\n  {\n    value: \"clothing\",\n    label: \"clothing\",\n  },\n  {\n    value: \"shoes\",\n    label: \"shoes\",\n  },\n  {\n    value: \"accessories\",\n    label: \"accessories\",\n  },\n];\n\nconst UpdateProduct: FC = () => {\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      dispatch(getProductById(id));\n    }\n  }, [dispatch, id]);\n\n  const initialState: ProductState = {\n    _id: \"\",\n    name: \"\",\n    category: \"\",\n    sizes: \"\",\n    variants: \"\",\n    description: \"\",\n    price: \"\",\n    image: \"\",\n    quantity: 0,\n    amountInCart: 0,\n  };\n\n  const { loading, currentProduct } = useSelector(\n    (state: AppState) => state.products\n  );\n  console.log(\"Current Product\", currentProduct);\n  const [product, setProduct] = useState(initialState);\n\n  const classes = useStyles();\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setProduct({\n      ...product,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const handleUpdateProduct = (event: React.FormEvent) => {\n    event.preventDefault();\n    dispatch(updateProduct(id, product));\n    window.location.reload(false);\n  };\n\n  return (\n    <Grid className={classes.container} container={true} justify=\"center\">\n      <Grid item={true} xs={12} md={10} lg={6}>\n        <h2>Update Product</h2>\n        <Card elevation={4} raised={true} variant=\"elevation\">\n          <CardContent>\n            <form>\n              <TextField\n                id=\"outlined-full-width\"\n                label=\"Name\"\n                style={{ margin: 8 }}\n                placeholder=\"Name\"\n                helperText=\"Required!\"\n                fullWidth\n                margin=\"normal\"\n                value={product.name}\n                onChange={handleChange}\n                name=\"name\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                // defaultValue={\n                //   currentProduct && currentProduct.name\n                //     ? currentProduct.id.name\n                //     : null\n                // }\n              />\n              <TextField\n                label=\"Description\"\n                id=\"outlined-full-width\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                helperText=\"Required!\"\n                value={product.description}\n                onChange={handleChange}\n                name=\"description\"\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-full-width\"\n                select\n                label=\"Select\"\n                value={product.category}\n                onChange={handleChange}\n                name=\"category\"\n                helperText=\"Please select your category\"\n              >\n                {categories.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                label=\"Sizes\"\n                id=\"outlined-full-width\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                helperText=\"Required!\"\n                margin=\"dense\"\n                value={product.sizes}\n                onChange={handleChange}\n                name=\"sizes\"\n                variant=\"outlined\"\n              />\n              <TextField\n                label=\"Variants\"\n                id=\"outlined-full-width\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                helperText=\"Required!\"\n                value={product.variants}\n                onChange={handleChange}\n                name=\"variants\"\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n\n              <TextField\n                label=\"Price\"\n                id=\"outlined-full-width\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                helperText=\"Required!\"\n                value={product.price}\n                onChange={handleChange}\n                name=\"price\"\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n\n              <TextField\n                label=\"Image Url\"\n                id=\"outlined-full-width\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                helperText=\"Not Required\"\n                value={product.image}\n                onChange={handleChange}\n                name=\"image\"\n                variant=\"outlined\"\n              />\n              <TextField\n                label=\"Quantity in Stock\"\n                id=\"outlined-full-width\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                helperText=\"Number of products in stock\"\n                value={product.quantity}\n                onChange={handleChange}\n                name=\"quantity\"\n                variant=\"outlined\"\n              />\n              {/* <UploadImage /> */}\n              <Button\n                className={classes.buttonColor}\n                variant=\"contained\"\n                disabled={loading}\n                fullWidth={true}\n                onClick={handleUpdateProduct}\n              >\n                Update Product\n              </Button>\n            </form>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default UpdateProduct;\n"]},"metadata":{},"sourceType":"module"}