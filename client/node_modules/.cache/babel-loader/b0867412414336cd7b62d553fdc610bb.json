{"ast":null,"code":"import axios from \"axios\";\nimport { SIGN_IN_FAILURE, SIGN_IN_REQUEST, SIGN_IN_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_OUT_FAILURE, SIGN_OUT_REQUEST, SIGN_OUT_SUCCESS, RESET_PASSWORD_FAILURE, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILURE, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, GOOGLE_SIGN_IN_FAILURE, GOOGLE_SIGN_IN_REQUEST, GOOGLE_SIGN_IN_SUCCESS, UPDATE_USER_FAILURE, UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, CHANGE_PASSWORD_FAILURE, CHANGE_PASSWORD_REQUEST, CHANGE_PASSWORD_SUCCESS } from \"../../types\";\nimport { alertFailure, alertSuccess } from \"./alert\";\nconst baseURL = \"/api/v1/users\"; //Sign up action creators\n\nconst signUpRequest = () => {\n  return {\n    type: SIGN_UP_REQUEST\n  };\n};\n\nconst signUpSuccess = (user, token) => {\n  return {\n    type: SIGN_UP_SUCCESS,\n    payload: {\n      user,\n      token\n    }\n  };\n};\n\nconst signUpFailure = error => {\n  return {\n    type: SIGN_UP_FAILURE,\n    payload: error\n  };\n};\n\nexport const signUp = (user, history) => {\n  return function (dispatch) {\n    dispatch(signUpRequest());\n    axios({\n      method: \"post\",\n      url: baseURL,\n      data: user\n    }).then(response => {\n      const {\n        data,\n        token\n      } = response.data;\n      dispatch(signUpSuccess(data, token));\n      dispatch(alertSuccess(\"Registration successful\"));\n      history.push(\"/signin\");\n    }).catch(error => {\n      dispatch(signUpFailure(error.response.data.message));\n      dispatch(alertFailure(error.response.data.message));\n    });\n  };\n}; //Sign in action creators\n\nexport const signInRequest = () => {\n  return {\n    type: SIGN_IN_REQUEST\n  };\n};\n\nconst signInSuccess = (token, user) => {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: {\n      token,\n      user\n    }\n  };\n};\n\nconst signInFailure = error => {\n  return {\n    type: SIGN_IN_FAILURE,\n    payload: error\n  };\n};\n\nexport const signIn = (email, password, history) => {\n  return function (dispatch) {\n    dispatch(signInRequest());\n    axios({\n      method: \"post\",\n      url: `${baseURL}/signin`,\n      data: {\n        email,\n        password\n      },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      }\n    }).then(response => {\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem(\"USER-TOKEN\", token);\n      dispatch(signInSuccess(token, user));\n      dispatch(alertSuccess(\"Sign in successful\"));\n      history.push(\"/admin\");\n    }).catch(error => {\n      dispatch(signInFailure(error.response.data.message));\n      dispatch(alertFailure(error.response.data.message));\n    });\n  };\n}; //Google Sign in action creators\n\nconst googleSignInRequest = () => {\n  return {\n    type: GOOGLE_SIGN_IN_REQUEST\n  };\n};\n\nconst googleSignInSuccess = token => {\n  return {\n    type: GOOGLE_SIGN_IN_SUCCESS,\n    payload: {\n      // user,\n      token\n    }\n  };\n};\n\nconst googleSignInFailure = error => {\n  return {\n    type: GOOGLE_SIGN_IN_FAILURE,\n    payload: error\n  };\n};\n\nexport const googleSignIn = (tokenId, history) => {\n  return function (dispatch) {\n    dispatch(googleSignInRequest());\n    axios({\n      method: \"post\",\n      url: `${baseURL}/google-signin`,\n      headers: {\n        Authorization: `Bearer ${tokenId}`\n      },\n      data: {\n        id_token: tokenId\n      }\n    } // { id_token: tokenId }\n    ).then(response => {\n      console.log(response);\n      const {\n        token\n      } = response.data;\n      localStorage.setItem(\"USER-TOKEN\", token);\n      dispatch(googleSignInSuccess(token));\n      history.push(\"/admin\");\n    }).catch(error => {\n      dispatch(googleSignInFailure(error));\n    });\n  };\n}; //sign out action creators\n\nexport const signOutRequest = function () {\n  return {\n    type: SIGN_OUT_REQUEST\n  };\n};\nexport const signOutSuccess = function () {\n  return {\n    type: SIGN_OUT_SUCCESS\n  };\n};\nexport const signOutFailure = function (error) {\n  return {\n    type: SIGN_OUT_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\nexport const signOut = function (history) {\n  return function async(dispatch) {\n    dispatch(signOutRequest());\n\n    try {\n      dispatch(signOutSuccess());\n      localStorage.clear();\n      history.push(\"/\");\n    } catch (error) {\n      dispatch(signOutFailure(error));\n    } // if (localStorage.getItem(\"USER_TOKEN\")) {\n    //   dispatch(apiFailure());\n    // } else {\n    //   dispatch(signOutSuccess());\n    // }\n\n  };\n}; //forgot-password action creators\n\nexport const forgotPasswordRequest = function () {\n  return {\n    type: FORGOT_PASSWORD_REQUEST\n  };\n};\nexport const forgotPasswordSuccess = function () {\n  return {\n    type: FORGOT_PASSWORD_SUCCESS\n  };\n};\nexport const forgotPasswordFailure = function (error) {\n  return {\n    type: FORGOT_PASSWORD_FAILURE,\n    payload: error\n  };\n};\nexport const forgotPassword = function (email) {\n  return function (dispatch) {\n    dispatch(forgotPasswordRequest());\n    axios({\n      method: \"post\",\n      url: `${baseURL}/forgot-password`,\n      data: {\n        email\n      }\n    }).then(response => {\n      dispatch(forgotPasswordSuccess());\n      dispatch(alertSuccess(\"Email successfully sent\"));\n    }).catch(error => {\n      dispatch(forgotPasswordFailure(error.response.data.message));\n      dispatch(alertFailure(error.response.data.message));\n    });\n  };\n}; //reset password action creators\n\nexport const resetPasswordRequest = function () {\n  return {\n    type: RESET_PASSWORD_REQUEST\n  };\n};\nexport const resetPasswordSuccess = function (token, password) {\n  return {\n    type: RESET_PASSWORD_SUCCESS,\n    payload: {\n      token,\n      password\n    }\n  };\n};\nexport const resetPasswordFailure = function (error) {\n  return {\n    type: RESET_PASSWORD_FAILURE,\n    payload: error\n  };\n};\nexport const resetPassword = function (password, resetToken) {\n  return function (dispatch) {\n    dispatch(resetPasswordRequest());\n    axios({\n      method: \"put\",\n      url: `${baseURL}/reset-password/${resetToken}`,\n      data: password,\n      headers: {\n        Authorization: `Bearer ${resetToken}`\n      }\n    }).then(response => {\n      const {\n        token,\n        password\n      } = response.data;\n      dispatch(resetPasswordSuccess(token, password));\n      localStorage.setItem(\"USER_TOKEN\", token);\n    }).catch(error => {\n      dispatch(resetPasswordFailure(error.response.data.message));\n    });\n  };\n}; // Update Profile\n\nexport const updateProfileRequest = () => {\n  return {\n    type: UPDATE_USER_REQUEST\n  };\n};\nexport const updateProfileSuccess = (user, token) => {\n  return {\n    type: UPDATE_USER_SUCCESS,\n    payload: {\n      user,\n      token\n    }\n  };\n};\nexport const updateProfileFailure = error => {\n  return {\n    type: UPDATE_USER_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\nexport const updateProfile = user => {\n  return function (dispatch) {\n    dispatch(updateProfileRequest());\n    axios({\n      method: \"put\",\n      url: `${baseURL}/update`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      },\n      data: user\n    }).then(response => {\n      const {\n        user,\n        token\n      } = response.data;\n      dispatch(updateProfileSuccess(user, token));\n      dispatch(alertSuccess(\"Profile successfully updated\"));\n    }).catch(error => {\n      dispatch(updateProfileFailure(error.response.data.message));\n      dispatch(alertFailure(\"Some details are missing, fill in required fields\"));\n    });\n  };\n}; // Change password\n\nexport const changePasswordRequest = () => {\n  return {\n    type: CHANGE_PASSWORD_REQUEST\n  };\n};\nexport const changePasswordSuccess = user => {\n  return {\n    type: CHANGE_PASSWORD_SUCCESS,\n    payload: {\n      user\n    }\n  };\n};\nexport const changePasswordFailure = error => {\n  return {\n    type: CHANGE_PASSWORD_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\nexport const changePassword = (email, oldPassword, newPassword) => {\n  return function (dispatch) {\n    dispatch(changePasswordRequest());\n    axios({\n      method: \"put\",\n      url: `${baseURL}/change-password`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      },\n      data: {\n        email,\n        oldPassword,\n        newPassword\n      }\n    }).then(response => {\n      const res = response.data;\n      dispatch(changePasswordSuccess(res));\n      dispatch(alertSuccess(\"Password Changed\"));\n    }).catch(error => {\n      dispatch(changePasswordFailure(error.response.data.message));\n      dispatch(alertFailure(error.response.data.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Josephine/Documents/JustShop/client/src/redux/actions/auth.ts"],"names":["axios","SIGN_IN_FAILURE","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_OUT_FAILURE","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","RESET_PASSWORD_FAILURE","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","GOOGLE_SIGN_IN_FAILURE","GOOGLE_SIGN_IN_REQUEST","GOOGLE_SIGN_IN_SUCCESS","UPDATE_USER_FAILURE","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","CHANGE_PASSWORD_FAILURE","CHANGE_PASSWORD_REQUEST","CHANGE_PASSWORD_SUCCESS","alertFailure","alertSuccess","baseURL","signUpRequest","type","signUpSuccess","user","token","payload","signUpFailure","error","signUp","history","dispatch","method","url","data","then","response","push","catch","message","signInRequest","signInSuccess","signInFailure","signIn","email","password","headers","Authorization","localStorage","getItem","setItem","googleSignInRequest","googleSignInSuccess","googleSignInFailure","googleSignIn","tokenId","id_token","console","log","signOutRequest","signOutSuccess","signOutFailure","signOut","async","clear","forgotPasswordRequest","forgotPasswordSuccess","forgotPasswordFailure","forgotPassword","resetPasswordRequest","resetPasswordSuccess","resetPasswordFailure","resetPassword","resetToken","updateProfileRequest","updateProfileSuccess","updateProfileFailure","updateProfile","changePasswordRequest","changePasswordSuccess","changePasswordFailure","changePassword","oldPassword","newPassword","res"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\n\nimport {\n  SIGN_IN_FAILURE,\n  SIGN_IN_REQUEST,\n  SIGN_IN_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_OUT_FAILURE,\n  SIGN_OUT_REQUEST,\n  SIGN_OUT_SUCCESS,\n  RESET_PASSWORD_FAILURE,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAILURE,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  GOOGLE_SIGN_IN_FAILURE,\n  GOOGLE_SIGN_IN_REQUEST,\n  GOOGLE_SIGN_IN_SUCCESS,\n  UPDATE_USER_FAILURE,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n  CHANGE_PASSWORD_FAILURE,\n  CHANGE_PASSWORD_REQUEST,\n  CHANGE_PASSWORD_SUCCESS,\n  UserState,\n  PasswordChangeState,\n} from \"../../types\";\nimport { alertClear, alertFailure, alertSuccess } from \"./alert\";\n\nconst baseURL = \"/api/v1/users\";\n\n//Sign up action creators\nconst signUpRequest = () => {\n  return {\n    type: SIGN_UP_REQUEST,\n  };\n};\nconst signUpSuccess = (user: UserState, token: string) => {\n  return {\n    type: SIGN_UP_SUCCESS,\n    payload: {\n      user,\n      token,\n    },\n  };\n};\nconst signUpFailure = (error: string) => {\n  return {\n    type: SIGN_UP_FAILURE,\n    payload: error,\n  };\n};\n\nexport const signUp = (user: UserState, history: any) => {\n  return function (dispatch: Dispatch) {\n    dispatch(signUpRequest());\n\n    axios({\n      method: \"post\",\n      url: baseURL,\n      data: user,\n    })\n      .then((response) => {\n        const { data, token } = response.data;\n        dispatch(signUpSuccess(data, token));\n        dispatch(alertSuccess(\"Registration successful\"));\n        history.push(\"/signin\");\n      })\n      .catch((error: any) => {\n        dispatch(signUpFailure(error.response.data.message));\n        dispatch(alertFailure(error.response.data.message));\n      });\n  };\n};\n\n//Sign in action creators\nexport const signInRequest = () => {\n  return {\n    type: SIGN_IN_REQUEST,\n  };\n};\nconst signInSuccess = (token: string, user: UserState) => {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: {\n      token,\n      user,\n    },\n  };\n};\nconst signInFailure = (error: string) => {\n  return {\n    type: SIGN_IN_FAILURE,\n    payload: error,\n  };\n};\nexport const signIn = (email: string, password: string, history: any) => {\n  return function (dispatch: Dispatch) {\n    dispatch(signInRequest());\n\n    axios({\n      method: \"post\",\n      url: `${baseURL}/signin`,\n      data: { email, password },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n      },\n    })\n      .then((response) => {\n        const { token, user } = response.data;\n        localStorage.setItem(\"USER-TOKEN\", token);\n        dispatch(signInSuccess(token, user));\n        dispatch(alertSuccess(\"Sign in successful\"));\n        history.push(\"/admin\");\n      })\n      .catch((error) => {\n        dispatch(signInFailure(error.response.data.message));\n\n        dispatch(alertFailure(error.response.data.message));\n      });\n  };\n};\n\n//Google Sign in action creators\n\nconst googleSignInRequest = () => {\n  return {\n    type: GOOGLE_SIGN_IN_REQUEST,\n  };\n};\nconst googleSignInSuccess = (token: string) => {\n  return {\n    type: GOOGLE_SIGN_IN_SUCCESS,\n    payload: {\n      // user,\n      token,\n    },\n  };\n};\nconst googleSignInFailure = (error: string) => {\n  return {\n    type: GOOGLE_SIGN_IN_FAILURE,\n    payload: error,\n  };\n};\n\nexport const googleSignIn = (tokenId: string, history: any) => {\n  return function (dispatch: Dispatch) {\n    dispatch(googleSignInRequest());\n    axios(\n      {\n        method: \"post\",\n        url: `${baseURL}/google-signin`,\n        headers: {\n          Authorization: `Bearer ${tokenId}`,\n        },\n        data: { id_token: tokenId },\n      }\n\n      // { id_token: tokenId }\n    )\n      .then((response) => {\n        console.log(response);\n\n        const { token } = response.data;\n        localStorage.setItem(\"USER-TOKEN\", token);\n        dispatch(googleSignInSuccess(token));\n        history.push(\"/admin\");\n      })\n      .catch((error) => {\n        dispatch(googleSignInFailure(error));\n      });\n  };\n};\n\n//sign out action creators\nexport const signOutRequest = function () {\n  return {\n    type: SIGN_OUT_REQUEST,\n  };\n};\n\nexport const signOutSuccess = function () {\n  return {\n    type: SIGN_OUT_SUCCESS,\n  };\n};\n\nexport const signOutFailure = function (error: string) {\n  return {\n    type: SIGN_OUT_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const signOut = function (history: any) {\n  return function async(dispatch: Dispatch) {\n    dispatch(signOutRequest());\n    try {\n      dispatch(signOutSuccess());\n      localStorage.clear();\n      history.push(\"/\");\n    } catch (error) {\n      dispatch(signOutFailure(error));\n    }\n    // if (localStorage.getItem(\"USER_TOKEN\")) {\n    //   dispatch(apiFailure());\n    // } else {\n    //   dispatch(signOutSuccess());\n    // }\n  };\n};\n\n//forgot-password action creators\nexport const forgotPasswordRequest = function () {\n  return {\n    type: FORGOT_PASSWORD_REQUEST,\n  };\n};\n\nexport const forgotPasswordSuccess = function () {\n  return {\n    type: FORGOT_PASSWORD_SUCCESS,\n  };\n};\n\nexport const forgotPasswordFailure = function (error: string) {\n  return {\n    type: FORGOT_PASSWORD_FAILURE,\n    payload: error,\n  };\n};\n\nexport const forgotPassword = function (email: string) {\n  return function (dispatch: Dispatch) {\n    dispatch(forgotPasswordRequest());\n    axios({\n      method: \"post\",\n      url: `${baseURL}/forgot-password`,\n      data: { email },\n    })\n      .then((response) => {\n        dispatch(forgotPasswordSuccess());\n        dispatch(alertSuccess(\"Email successfully sent\"));\n      })\n      .catch((error) => {\n        dispatch(forgotPasswordFailure(error.response.data.message));\n        dispatch(alertFailure(error.response.data.message));\n      });\n  };\n};\n\n//reset password action creators\nexport const resetPasswordRequest = function () {\n  return {\n    type: RESET_PASSWORD_REQUEST,\n  };\n};\n\nexport const resetPasswordSuccess = function (token: any, password: any) {\n  return {\n    type: RESET_PASSWORD_SUCCESS,\n    payload: { token, password },\n  };\n};\n\nexport const resetPasswordFailure = function (error: any) {\n  return {\n    type: RESET_PASSWORD_FAILURE,\n    payload: error,\n  };\n};\n\nexport const resetPassword = function (password: string, resetToken: string) {\n  return function (dispatch: Dispatch) {\n    dispatch(resetPasswordRequest());\n    axios({\n      method: \"put\",\n      url: `${baseURL}/reset-password/${resetToken}`,\n      data: password,\n      headers: {\n        Authorization: `Bearer ${resetToken}`,\n      },\n    })\n      .then((response) => {\n        const { token, password } = response.data;\n        dispatch(resetPasswordSuccess(token, password));\n        localStorage.setItem(\"USER_TOKEN\", token);\n      })\n      .catch((error) => {\n        dispatch(resetPasswordFailure(error.response.data.message));\n      });\n  };\n};\n\n// Update Profile\n\nexport const updateProfileRequest = () => {\n  return {\n    type: UPDATE_USER_REQUEST,\n  };\n};\nexport const updateProfileSuccess = (user: UserState, token: string) => {\n  return {\n    type: UPDATE_USER_SUCCESS,\n    payload: {\n      user,\n      token,\n    },\n  };\n};\nexport const updateProfileFailure = (error: string) => {\n  return {\n    type: UPDATE_USER_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const updateProfile = (user: UserState) => {\n  return function (dispatch: Dispatch) {\n    dispatch(updateProfileRequest());\n\n    axios({\n      method: \"put\",\n      url: `${baseURL}/update`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n      },\n      data: user,\n    })\n      .then((response) => {\n        const { user, token } = response.data;\n        dispatch(updateProfileSuccess(user, token));\n        dispatch(alertSuccess(\"Profile successfully updated\"));\n      })\n      .catch((error) => {\n        dispatch(updateProfileFailure(error.response.data.message));\n        dispatch(\n          alertFailure(\"Some details are missing, fill in required fields\")\n        );\n      });\n  };\n};\n\n// Change password\nexport const changePasswordRequest = () => {\n  return {\n    type: CHANGE_PASSWORD_REQUEST,\n  };\n};\nexport const changePasswordSuccess = (user: UserState) => {\n  return {\n    type: CHANGE_PASSWORD_SUCCESS,\n    payload: { user },\n  };\n};\nexport const changePasswordFailure = (error: string) => {\n  return {\n    type: CHANGE_PASSWORD_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const changePassword = (\n  email: string,\n  oldPassword: string,\n  newPassword: string\n) => {\n  return function (dispatch: Dispatch) {\n    dispatch(changePasswordRequest());\n\n    axios({\n      method: \"put\",\n      url: `${baseURL}/change-password`,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n      },\n      data: { email, oldPassword, newPassword },\n    })\n      .then((response) => {\n        const res = response.data;\n        dispatch(changePasswordSuccess(res));\n        dispatch(alertSuccess(\"Password Changed\"));\n      })\n      .catch((error) => {\n        dispatch(changePasswordFailure(error.response.data.message));\n        dispatch(alertFailure(error.response.data.message));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}