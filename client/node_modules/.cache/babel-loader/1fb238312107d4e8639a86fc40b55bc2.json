{"ast":null,"code":"import{applyMiddleware,createStore,compose}from\"redux\";import{persistStore,persistReducer}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";import createSagaMiddleware from\"redux-saga\";import thunk from\"redux-thunk\";import createRootReducer from\"./reducers/index\";import{isValidToken}from\"./reducers/auth\";// import rootSaga from \"./sagas/index\";\nvar initState={products:{allProducts:[],loading:false,error:\"\",currentProduct:{}// search: \"\",\n},users:{allUsers:[],loading:false,error:\"\"},authentication:{currentUser:localStorage.getItem(\"USER-TOKEN\")?isValidToken(localStorage.getItem(\"USER-TOKEN\")):null,token:localStorage.getItem(\"USER-TOKEN\")?localStorage.getItem(\"USER-TOKEN\"):null,error:\"\",loading:false,isAuthenticated:false},cart:{inCart:[]},alert:{type:\"\",message:\"\"},orders:{orders:[],loading:false,error:\"\"}};var persistConfig={key:\"persistedStore\",storage:storage};var persistedReducer=persistReducer(persistConfig,createRootReducer());export default function makeStore(){var initialState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var sagaMiddleware=createSagaMiddleware();var middlewares=[thunk,sagaMiddleware];var composeEnhancers=compose;if(process.env.NODE_ENV===\"development\"){if(window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__){composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;}}var store=createStore(persistedReducer,initialState,composeEnhancers(applyMiddleware.apply(void 0,middlewares)));var persistor=persistStore(store);// sagaMiddleware.run(rootSaga);\nif(module.hot){module.hot.accept(\"./reducers\",function(){var nextReducer=require(\"./reducers\").default;store.replaceReducer(nextReducer);});}return{store:store,persistor:persistor};}","map":{"version":3,"sources":["/Users/Josephine/Documents/Integrify-full-stack/full-stack-4-typescript-men-boilerplate/frontend/src/redux/store.tsx"],"names":["applyMiddleware","createStore","compose","persistStore","persistReducer","storage","createSagaMiddleware","thunk","createRootReducer","isValidToken","initState","products","allProducts","loading","error","currentProduct","users","allUsers","authentication","currentUser","localStorage","getItem","token","isAuthenticated","cart","inCart","alert","type","message","orders","persistConfig","key","persistedReducer","makeStore","initialState","sagaMiddleware","middlewares","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor","module","hot","accept","nextReducer","require","default","replaceReducer"],"mappings":"AAAA,OAASA,eAAT,CAA0BC,WAA1B,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA,MAAOC,CAAAA,iBAAP,KAA8B,kBAA9B,CAEA,OAASC,YAAT,KAA6B,iBAA7B,CACA;AAEA,GAAMC,CAAAA,SAAmB,CAAG,CAC1BC,QAAQ,CAAE,CACRC,WAAW,CAAE,EADL,CAERC,OAAO,CAAE,KAFD,CAGRC,KAAK,CAAE,EAHC,CAIRC,cAAc,CAAE,EAChB;AALQ,CADgB,CAQ1BC,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CAELJ,OAAO,CAAE,KAFJ,CAGLC,KAAK,CAAE,EAHF,CARmB,CAa1BI,cAAc,CAAE,CACdC,WAAW,CAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,EACTZ,YAAY,CAACW,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAD,CADH,CAET,IAHU,CAIdC,KAAK,CAAEF,YAAY,CAACC,OAAb,CAAqB,YAArB,EACHD,YAAY,CAACC,OAAb,CAAqB,YAArB,CADG,CAEH,IANU,CAOdP,KAAK,CAAE,EAPO,CAQdD,OAAO,CAAE,KARK,CASdU,eAAe,CAAE,KATH,CAbU,CAwB1BC,IAAI,CAAE,CACJC,MAAM,CAAE,EADJ,CAxBoB,CA2B1BC,KAAK,CAAE,CAAEC,IAAI,CAAE,EAAR,CAAYC,OAAO,CAAE,EAArB,CA3BmB,CA4B1BC,MAAM,CAAE,CACNA,MAAM,CAAE,EADF,CAENhB,OAAO,CAAE,KAFH,CAGNC,KAAK,CAAE,EAHD,CA5BkB,CAA5B,CAkCA,GAAMgB,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,gBADe,CAEpB1B,OAAO,CAAPA,OAFoB,CAAtB,CAIA,GAAM2B,CAAAA,gBAAgB,CAAG5B,cAAc,CAAC0B,aAAD,CAAgBtB,iBAAiB,EAAjC,CAAvC,CAEA,cAAe,SAASyB,CAAAA,SAAT,EAA6C,IAA1BC,CAAAA,YAA0B,2DAAXxB,SAAW,CAC1D,GAAMyB,CAAAA,cAAc,CAAG7B,oBAAoB,EAA3C,CACA,GAAM8B,CAAAA,WAAW,CAAG,CAAC7B,KAAD,CAAQ4B,cAAR,CAApB,CACA,GAAIE,CAAAA,gBAAgB,CAAGnC,OAAvB,CAEA,GAAIoC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA7B,CAA4C,CAC1C,GAAKC,MAAD,CAAgBC,oCAApB,CAA0D,CACxDL,gBAAgB,CAAII,MAAD,CAAgBC,oCAAnC,CACD,CACF,CAED,GAAMC,CAAAA,KAAK,CAAG1C,WAAW,CACvB+B,gBADuB,CAEvBE,YAFuB,CAGvBG,gBAAgB,CAACrC,eAAe,MAAf,QAAmBoC,WAAnB,CAAD,CAHO,CAAzB,CAKA,GAAIQ,CAAAA,SAAS,CAAGzC,YAAY,CAACwC,KAAD,CAA5B,CACA;AAEA,GAAKE,MAAD,CAAgBC,GAApB,CAAyB,CACtBD,MAAD,CAAgBC,GAAhB,CAAoBC,MAApB,CAA2B,YAA3B,CAAyC,UAAM,CAC7C,GAAMC,CAAAA,WAAW,CAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAA1C,CACAP,KAAK,CAACQ,cAAN,CAAqBH,WAArB,EACD,CAHD,EAID,CACD,MAAO,CAAEL,KAAK,CAALA,KAAF,CAASC,SAAS,CAATA,SAAT,CAAP,CACD","sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\nimport thunk from \"redux-thunk\";\n\nimport createRootReducer from \"./reducers/index\";\nimport { AppState } from \"../types\";\nimport { isValidToken } from \"./reducers/auth\";\n// import rootSaga from \"./sagas/index\";\n\nconst initState: AppState = {\n  products: {\n    allProducts: [],\n    loading: false,\n    error: \"\",\n    currentProduct: {},\n    // search: \"\",\n  },\n  users: {\n    allUsers: [],\n    loading: false,\n    error: \"\",\n  },\n  authentication: {\n    currentUser: localStorage.getItem(\"USER-TOKEN\")\n      ? isValidToken(localStorage.getItem(\"USER-TOKEN\"))\n      : null,\n    token: localStorage.getItem(\"USER-TOKEN\")\n      ? localStorage.getItem(\"USER-TOKEN\")\n      : null,\n    error: \"\",\n    loading: false,\n    isAuthenticated: false,\n  },\n  cart: {\n    inCart: [],\n  },\n  alert: { type: \"\", message: \"\" },\n  orders: {\n    orders: [],\n    loading: false,\n    error: \"\",\n  },\n};\nconst persistConfig = {\n  key: \"persistedStore\",\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, createRootReducer());\n\nexport default function makeStore(initialState = initState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [thunk, sagaMiddleware];\n  let composeEnhancers = compose;\n\n  if (process.env.NODE_ENV === \"development\") {\n    if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    }\n  }\n\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n  let persistor = persistStore(store);\n  // sagaMiddleware.run(rootSaga);\n\n  if ((module as any).hot) {\n    (module as any).hot.accept(\"./reducers\", () => {\n      const nextReducer = require(\"./reducers\").default;\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return { store, persistor };\n}\n"]},"metadata":{},"sourceType":"module"}